// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/internal/utils"
)

// ActorType - Type of the actor (e.g., user, system)
type ActorType string

const (
	ActorTypeUser   ActorType = "user"
	ActorTypeSystem ActorType = "system"
)

func (e ActorType) ToPointer() *ActorType {
	return &e
}
func (e *ActorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "system":
		*e = ActorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActorType: %v", v)
	}
}

type Actor struct {
	// Organization ID of the actor
	OrgID *string `json:"org_id,omitempty"`
	// Type of the actor (e.g., user, system)
	Type ActorType `json:"type"`
	// User ID of the actor
	UserID *string `json:"user_id,omitempty"`
}

func (a Actor) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Actor) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (o *Actor) GetOrgID() *string {
	if o == nil {
		return nil
	}
	return o.OrgID
}

func (o *Actor) GetType() ActorType {
	if o == nil {
		return ActorType("")
	}
	return o.Type
}

func (o *Actor) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
