// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/models/shared"
	"net/http"
)

type ListVersionsRequest struct {
	// ID of the app configuration
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// Page number for pagination
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Number of items per page
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=pageSize"`
}

func (l ListVersionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListVersionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListVersionsRequest) GetAppID() string {
	if o == nil {
		return ""
	}
	return o.AppID
}

func (o *ListVersionsRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListVersionsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListVersionsPagination struct {
	Page     *int64 `json:"page,omitempty"`
	PageSize *int64 `json:"pageSize,omitempty"`
	Total    *int64 `json:"total,omitempty"`
}

func (o *ListVersionsPagination) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListVersionsPagination) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListVersionsPagination) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

// ListVersionsResponseBody - List of app versions
type ListVersionsResponseBody struct {
	Pagination *ListVersionsPagination       `json:"pagination,omitempty"`
	Versions   []shared.ConfigurationVersion `json:"versions,omitempty"`
}

func (o *ListVersionsResponseBody) GetPagination() *ListVersionsPagination {
	if o == nil {
		return nil
	}
	return o.Pagination
}

func (o *ListVersionsResponseBody) GetVersions() []shared.ConfigurationVersion {
	if o == nil {
		return nil
	}
	return o.Versions
}

type ListVersionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List of app versions
	Object *ListVersionsResponseBody
}

func (o *ListVersionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListVersionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListVersionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListVersionsResponse) GetObject() *ListVersionsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
