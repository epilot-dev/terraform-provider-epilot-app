// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotificationEvent string

const (
	NotificationEventAppInstalled   NotificationEvent = "app.installed"
	NotificationEventAppUninstalled NotificationEvent = "app.uninstalled"
)

func (e NotificationEvent) ToPointer() *NotificationEvent {
	return &e
}
func (e *NotificationEvent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "app.installed":
		fallthrough
	case "app.uninstalled":
		*e = NotificationEvent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationEvent: %v", v)
	}
}
