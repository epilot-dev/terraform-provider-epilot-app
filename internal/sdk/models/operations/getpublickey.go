// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

// GetPublicKeyResponseBody - Public key for signature verification
type GetPublicKeyResponseBody struct {
	Algorithm *string `json:"algorithm,omitempty"`
	Issuer    *string `json:"issuer,omitempty"`
	// PEM-formatted RSA public key
	PublicKey *string `json:"public_key,omitempty"`
}

func (o *GetPublicKeyResponseBody) GetAlgorithm() *string {
	if o == nil {
		return nil
	}
	return o.Algorithm
}

func (o *GetPublicKeyResponseBody) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *GetPublicKeyResponseBody) GetPublicKey() *string {
	if o == nil {
		return nil
	}
	return o.PublicKey
}

type GetPublicKeyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Public key for signature verification
	Object *GetPublicKeyResponseBody
}

func (o *GetPublicKeyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetPublicKeyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetPublicKeyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetPublicKeyResponse) GetObject() *GetPublicKeyResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
