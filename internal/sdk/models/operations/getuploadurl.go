// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/models/shared"
	"net/http"
	"time"
)

// GetUploadURLResponseBody - Upload URL generated successfully
type GetUploadURLResponseBody struct {
	// ID of the app configuration
	AppID *string `json:"app_id,omitempty"`
	// Timestamp when the upload URL expires
	ExpiresAt   *time.Time         `json:"expires_at,omitempty"`
	S3Reference shared.S3Reference `json:"s3_reference"`
	// Presigned S3 URL for uploading the file
	UploadURL string `json:"upload_url"`
}

func (g GetUploadURLResponseBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetUploadURLResponseBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetUploadURLResponseBody) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *GetUploadURLResponseBody) GetExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

func (o *GetUploadURLResponseBody) GetS3Reference() shared.S3Reference {
	if o == nil {
		return shared.S3Reference{}
	}
	return o.S3Reference
}

func (o *GetUploadURLResponseBody) GetUploadURL() string {
	if o == nil {
		return ""
	}
	return o.UploadURL
}

type GetUploadURLResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Upload URL generated successfully
	Object *GetUploadURLResponseBody
}

func (o *GetUploadURLResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUploadURLResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUploadURLResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetUploadURLResponse) GetObject() *GetUploadURLResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
