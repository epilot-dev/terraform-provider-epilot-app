// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublicConfigurationDescription - Markdown description of the app.
type PublicConfigurationDescription struct {
	// German translation
	De string `json:"de"`
	// English translation
	En *string `json:"en,omitempty"`
}

func (o *PublicConfigurationDescription) GetDe() string {
	if o == nil {
		return ""
	}
	return o.De
}

func (o *PublicConfigurationDescription) GetEn() *string {
	if o == nil {
		return nil
	}
	return o.En
}

type PublicConfigurationPricingType string

const (
	PublicConfigurationPricingTypeFree         PublicConfigurationPricingType = "FREE"
	PublicConfigurationPricingTypeSubscription PublicConfigurationPricingType = "SUBSCRIPTION"
	PublicConfigurationPricingTypeUsageBased   PublicConfigurationPricingType = "USAGE_BASED"
	PublicConfigurationPricingTypeOneTime      PublicConfigurationPricingType = "ONE_TIME"
	PublicConfigurationPricingTypeCustom       PublicConfigurationPricingType = "CUSTOM"
	PublicConfigurationPricingTypeUnknown      PublicConfigurationPricingType = "UNKNOWN"
)

func (e PublicConfigurationPricingType) ToPointer() *PublicConfigurationPricingType {
	return &e
}
func (e *PublicConfigurationPricingType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FREE":
		fallthrough
	case "SUBSCRIPTION":
		fallthrough
	case "USAGE_BASED":
		fallthrough
	case "ONE_TIME":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "UNKNOWN":
		*e = PublicConfigurationPricingType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicConfigurationPricingType: %v", v)
	}
}

// PublicConfigurationPricing - Pricing information for the app
type PublicConfigurationPricing struct {
	// How often the subscription is billed
	BillingFrequency *BillingFrequency               `json:"billing_frequency,omitempty"`
	PricingType      *PublicConfigurationPricingType `json:"pricing_type,omitempty"`
}

func (o *PublicConfigurationPricing) GetBillingFrequency() *BillingFrequency {
	if o == nil {
		return nil
	}
	return o.BillingFrequency
}

func (o *PublicConfigurationPricing) GetPricingType() *PublicConfigurationPricingType {
	if o == nil {
		return nil
	}
	return o.PricingType
}

// PublicConfiguration - Public configuration of the published app
type PublicConfiguration struct {
	// ID of the app configuration
	AppID  string  `json:"app_id"`
	Author *Author `json:"author,omitempty"`
	// Category of the app.
	Category   *string         `json:"category,omitempty"`
	Components []BaseComponent `json:"components"`
	// Timestamp when the app version is deprecated
	DeprecatedAt *string                         `json:"deprecated_at,omitempty"`
	Description  *PublicConfigurationDescription `json:"description,omitempty"`
	// URL of the app documentation.
	DocumentationURL *string `json:"documentation_url,omitempty"`
	// URL of the app icon.
	IconURL *string `json:"icon_url,omitempty"`
	// Flag to indicate if the app is in beta.
	IsBeta *bool `json:"is_beta,omitempty"`
	// Name of the app
	Name string `json:"name"`
	// Organization ID of the app owner
	OwnerOrgID string                      `json:"owner_org_id"`
	Pricing    *PublicConfigurationPricing `json:"pricing,omitempty"`
	// Email address for support requests
	SupportEmail *string `json:"support_email,omitempty"`
	// Version of the app that is installed
	Version string `json:"version"`
}

func (o *PublicConfiguration) GetAppID() string {
	if o == nil {
		return ""
	}
	return o.AppID
}

func (o *PublicConfiguration) GetAuthor() *Author {
	if o == nil {
		return nil
	}
	return o.Author
}

func (o *PublicConfiguration) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *PublicConfiguration) GetComponents() []BaseComponent {
	if o == nil {
		return []BaseComponent{}
	}
	return o.Components
}

func (o *PublicConfiguration) GetDeprecatedAt() *string {
	if o == nil {
		return nil
	}
	return o.DeprecatedAt
}

func (o *PublicConfiguration) GetDescription() *PublicConfigurationDescription {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PublicConfiguration) GetDocumentationURL() *string {
	if o == nil {
		return nil
	}
	return o.DocumentationURL
}

func (o *PublicConfiguration) GetIconURL() *string {
	if o == nil {
		return nil
	}
	return o.IconURL
}

func (o *PublicConfiguration) GetIsBeta() *bool {
	if o == nil {
		return nil
	}
	return o.IsBeta
}

func (o *PublicConfiguration) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PublicConfiguration) GetOwnerOrgID() string {
	if o == nil {
		return ""
	}
	return o.OwnerOrgID
}

func (o *PublicConfiguration) GetPricing() *PublicConfigurationPricing {
	if o == nil {
		return nil
	}
	return o.Pricing
}

func (o *PublicConfiguration) GetSupportEmail() *string {
	if o == nil {
		return nil
	}
	return o.SupportEmail
}

func (o *PublicConfiguration) GetVersion() string {
	if o == nil {
		return ""
	}
	return o.Version
}
