// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MimeType - MIME type of the logo file
type MimeType string

const (
	MimeTypeImagePng  MimeType = "image/png"
	MimeTypeImageJpeg MimeType = "image/jpeg"
	MimeTypeImageJpg  MimeType = "image/jpg"
)

func (e MimeType) ToPointer() *MimeType {
	return &e
}
func (e *MimeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "image/png":
		fallthrough
	case "image/jpeg":
		fallthrough
	case "image/jpg":
		*e = MimeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MimeType: %v", v)
	}
}

type CreateLogoPresignedRequest struct {
	// Original filename of the logo
	Filename string `json:"filename"`
	// MIME type of the logo file
	MimeType MimeType `json:"mime_type"`
}

func (o *CreateLogoPresignedRequest) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

func (o *CreateLogoPresignedRequest) GetMimeType() MimeType {
	if o == nil {
		return MimeType("")
	}
	return o.MimeType
}
